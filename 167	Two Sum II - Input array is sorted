/*

Two Sum II - Input array is sorted
Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.
You may assume that each input would have exactly one solution.

Input: numbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2

*/
昨天刚见到一个类似的题，比这个还要复杂。给定的数组是无序的，而且还扩展到3个数，甚至是任意N个数。
http://blog.sina.com.cn/s/blog_afe2af380102uzbl.html

public class Solution {  
    public int[] twoSum(int[] numbers, int target) {  
        int[] res = new int[]{-1,-1};  
        int start = 0; int end = numbers.length-1;  
        while(start<end){  
            int sum = numbers[start]+numbers[end];  
            if(sum == target){  
                res[0] = start+1;  
                res[1] = end+1;  
                return res;  
            }else if(sum >target){  
                end--;  
            }else{ // sum<target  
                start++;                  
            }  
        }  
        return res;  
    }  
}  
